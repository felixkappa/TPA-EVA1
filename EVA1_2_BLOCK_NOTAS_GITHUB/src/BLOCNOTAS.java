
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author invitado
 */
public class BLOCNOTAS extends javax.swing.JFrame {

    /**
     * Creates new form BLOCNOTAS
     */
    public BLOCNOTAS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txt_texto = new javax.swing.JTextArea();
        btn_guardar = new javax.swing.JButton();
        btn_abrir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_texto.setColumns(20);
        txt_texto.setRows(5);
        jScrollPane1.setViewportView(txt_texto);

        btn_guardar.setText("Guardar");
        btn_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_guardarMouseClicked(evt);
            }
        });

        btn_abrir.setText("Abrir");
        btn_abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_abrirMouseClicked(evt);
            }
        });
        btn_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abrirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_abrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_abrir)
                        .addGap(18, 18, 18)
                        .addComponent(btn_guardar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_abrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_abrirMouseClicked
        JFileChooser  JfoAbrir = new JFileChooser("C:\\Users\\invitado\\Documents\\testing");
        int resu = JfoAbrir.showOpenDialog(this);
        if(resu == JFileChooser.APPROVE_OPTION){
        System.out.println(JfoAbrir.getSelectedFile());
        
        BufferedReader br = null;
        InputStream is = null;
        
        
        // necesitas un reader para el txt_area
        
            try {
                is = Files.newInputStream(JfoAbrir.getSelectedFile().toPath());
            } catch (IOException ex) {
                Logger.getLogger(BLOCNOTAS.class.getName()).log(Level.SEVERE, null, ex);
            }
        InputStreamReader isr = new InputStreamReader(is);
        
        br = new BufferedReader (isr);
            try {
                txt_texto.read(br, "Abrir Archivo");
            } catch (IOException ex) {
                ex.printStackTrace();
            
            }finally{
                
                if(br!=null){
                    try {
                        br.close();
                        is.close();
                    } catch (IOException ex) {
                        Logger.getLogger(BLOCNOTAS.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                
                        }
        
        
            }
        
            
    
                
            
            
                
    }//GEN-LAST:event_btn_abrirMouseClicked
    }
    
            
    private void btn_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardarMouseClicked
        JFileChooser  JfoAbrir = new JFileChooser("C:\\Users\\invitado\\Documents\\testing");
        JfoAbrir.showSaveDialog(this);
        int resu = JfoAbrir.showSaveDialog(this);
        if(resu == JFileChooser.APPROVE_OPTION){
        System.out.println(JfoAbrir.getSelectedFile());
        
        BufferedWriter bw = null;
        OutputStream os = null;
        
        
        // necesitas un writer para el txt_area
        
            try {
                os = Files.newOutputStream(JfoAbrir.getSelectedFile().toPath());
            } catch (IOException ex) {
                Logger.getLogger(BLOCNOTAS.class.getName()).log(Level.SEVERE, null, ex);
            }
        OutputStreamWriter ow = new OutputStreamWriter(os);
        
        bw = new BufferedWriter (ow);
            try {
                txt_texto.write(bw);
            } catch (IOException ex) {
                ex.printStackTrace();
            
            }finally{
                
                if(bw!=null){
                    try {
                        bw.close();
                        os.close();
                    } catch (IOException ex) {
                        Logger.getLogger(BLOCNOTAS.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                
                        }
        
        
            }
        
        
        }
        
// TODO add your handling code here:
    }//GEN-LAST:event_btn_guardarMouseClicked

    private void btn_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abrirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_abrirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BLOCNOTAS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BLOCNOTAS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BLOCNOTAS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BLOCNOTAS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BLOCNOTAS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_abrir;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txt_texto;
    // End of variables declaration//GEN-END:variables
}
